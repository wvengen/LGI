#!/bin/bash

# some settings...
export VOMS="ncf"
export LGI_DIR="${HOME}/LGI"
export X509_USER_PROXY=./x509_proxy_cert

# get repository url and download input...
export REPO_URL=`${LGI_DIR}/daemon/bin/xml repository_url < LGI_job_specifics`
export REPO_CONTENT=`${LGI_DIR}/daemon/bin/LGI_filetransfer list -x ${REPO_URL}`
export FILE_LIST=""
export NR_FILES=`echo ${REPO_CONTENT} | ${LGI_DIR}/daemon/bin/xml number_of_files`

for nr in `seq 1 ${NR_FILES}`
do
  export FILE_ATTR="number=\"${nr}\""
  export FILE_DATA=`echo ${REPO_CONTENT} | ${LGI_DIR}/daemon/bin/xml file ${FILE_ATTR}`
  export FILE_NAME=`echo ${FILE_DATA} | ${LGI_DIR}/daemon/bin/xml file_name`
  export FILE_LIST="${FILE_LIST} ${FILE_NAME}"
done

if [ "${FILE_LIST}" != "" ]
then
 ${LGI_DIR}/daemon/bin/LGI_filetransfer download ${REPO_URL} ${FILE_LIST} > /dev/null
fi

if [ -f classical.in ]
then
 echo Input file classical.in has been downloaded from repository ${REPO_URL}... > LGI_output
else
 cp LGI_input classical.in > /dev/null
 echo Input copied... > LGI_output
fi

# now copy executable...
cp ${LGI_DIR}/daemon/CLASSICAL/ClassicalDynamics_Linux.x . > /dev/null

# create job script...
cat > classical.submitted.sh << EOF_SCRIPT
chmod +x ClassicalDynamics_Linux.x
./ClassicalDynamics_Linux.x classical.in classical.out classical.stdout
EOF_SCRIPT

# create JDL for this job script...
cat > classical.submitted.jdl << EOF_JDL
type = "Job";
jobtype = "Normal";
executable = "/bin/bash";
arguments = "classical.submitted.sh";
stdoutput = "stdout";
stderror = "stderr";
outputsandbox = { "classical.out", "classical.stdout", "stdout", "stderr" };
inputsandbox = { "classical.submitted.sh", "ClassicalDynamics_Linux.x", "classical.in" };
shallowretrycount = 3;
requirements = ( other.gluecepolicymaxcputime > 1440 );
myproxyserver = "px.grid.sara.nl";
EOF_JDL

# create and submit new job from JDL...
export RUNNING=""
while [ "${RUNNING}" == "" ]
do
 myproxy-init -s px.grid.sara.nl -d -n > /dev/null
 voms-proxy-init -voms ${VOMS} -valid 196:00 -q &> /dev/null
 glite-wms-job-submit -a -o ${HOME}/my-glite-jobs classical.submitted.jdl | grep https | grep 9000 | tail -1 &> ./running
 export RUNNING=`cat ./running | grep -E '^https'`
 if [ "${RUNNING}" == "" ]
 then
    sleep 300
 fi
done

export JOB_ID=`cat ./running`
echo Job ${JOB_ID} submitted to glite... >> LGI_output

# wait until job is finished, sleep a bit...
export JOB_STATE=""
while [ "${JOB_STATE}" == "" ]
do
    sleep 300
    export JOB_ID=`cat ./running`
    export OUTPUT=`glite-wms-job-status ${JOB_ID}`
    export JOB_STATE=`echo ${OUTPUT} | grep "Current Status" | grep -iE "Done|Cancelled|Cleared|Aborted"`
    export FAILED=`echo ${OUTPUT} | grep -i "expired"`
    if [ "${FAILED}" != "" ]
    then
      voms-proxy-init -voms ${VOMS} -valid 196:00 -q &> /dev/null 
    fi
done
echo Job ${JOB_ID} finished, retrieving output... >> LGI_output

# retrieve the output now...
glite-wms-job-output --dir ./output-files ${JOB_ID} &> /dev/null

# send back the output to LGI server...
${LGI_DIR}/daemon/bin/LGI_filetransfer upload ${REPO_URL} ./output-files/*/* > /dev/null
echo Uploaded output to repository ${REPO_URL}... >> LGI_output

# and we are finished...
touch ./finished
