#!/bin/csh

setenv LGI_DIR /home/${USER}/LGI

setenv CPUS `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics cpus | grep -E '^([0-9]{1,2})$'`
if ( ${CPUS} <= 0 || ${CPUS} > 4 ) then
   setenv CPUS 4 
endif

setenv WALLTIME `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics walltime | grep -E '^([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})$'`
if ( `echo ${WALLTIME} | cut -d':' -f 1` <= 0 || `echo ${WALLTIME} | cut -d ':' -f 1` > 8 ) then
   setenv WALLTIME "8:00:00"
endif

setenv NODES `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics nodes | grep -E '^([0-9]{1,2})$'`
if ( ${NODES} <= 0 || ${NODES} > 4 ) then
   setenv NODES 4
endif

cat > ./pbs_script << END_OF_PBS_SCRIPT
#PBS -S /bin/csh
#PBS -l nodes=${NODES}:ppn=${CPUS},walltime=${WALLTIME}
#PBS -N cpmd_pbs
#PBS -o LGI_output

setenv LGI_DIR /home/\${USER}/LGI

setenv REPOSITORY_URL \`\${LGI_DIR}/daemon/bin/xml repository_url < \${PBS_O_WORKDIR}/LGI_job_specifics\`

setenv CPMDHOME /home/\${USER}/CPMD
setenv CPMDBIN \${CPMDHOME}/bin
setenv CPMDPPLIB \${CPMDHOME}/PPLIB

setenv NrOfCPUs \`wc -l < \${PBS_NODEFILE} | cut -d' ' -f 1\`

setenv NODE \`hostname -f\`
mkdir -p /scratch/\${USER}/\${PBS_JOBID}
cd /scratch/\${USER}/\${PBS_JOBID}

setenv CWD \`pwd\`

if ( \${REPOSITORY_URL} != "" ) then

 setenv REPOSITORY_CONTENT \`\${LGI_DIR}/daemon/bin/LGI_filetransfer -j \${PBS_O_WORKDIR} -x list \${REPOSITORY_URL}\`

 setenv NROFFILES \`echo \${REPOSITORY_CONTENT} | \${LGI_DIR}/daemon/bin/xml number_of_files\`
 setenv FILE_LIST ""

 foreach nr ( \`seq 1 \${NROFFILES}\` )
    setenv FILE_ATTR  number=\\"\${nr}\\"
    setenv FILE_DATA \`echo \${REPOSITORY_CONTENT} | \${LGI_DIR}/daemon/bin/xml file \${FILE_ATTR}\`
    setenv FILE_NAME \`echo \${FILE_DATA} | \${LGI_DIR}/daemon/bin/xml file_name\`
    setenv FILE_LIST "\${FILE_LIST} \${FILE_NAME}"
 end

 if ( "\${FILE_LIST}" != "" ) then
    setenv DATE \`date\`
    echo "CPMD_PBS started retrieving repository \${REPOSITORY_URL} to \${NODE}:\${CWD} at \${DATE}." 
    \${LGI_DIR}/daemon/bin/LGI_filetransfer -j \${PBS_O_WORKDIR} download \${REPOSITORY_URL} \${FILE_LIST} > /dev/null
 else
    echo "No files found in repository."
 endif

 dos2unix -n \${PBS_O_WORKDIR}/LGI_input cpmd.input

 setenv DATE \`date\`
 echo "CPMD_PBS started cpmd on node \${NODE} at \${DATE}." 
 mpiexec -n \${NrOfCPUs} \${CPMDBIN}/cpmd.x cpmd.input \${CPMDPPLIB} > cpmd.output

 setenv FILE_LIST \`ls\`
 if ( "\${FILE_LIST}" != "" ) then
    setenv DATE \`date\`
    echo "CPMD_PBS started sending back the output from \${NODE}:\${CWD} to repository \${REPOSITORY_URL} at \${DATE}." 
    \${LGI_DIR}/daemon/bin/LGI_filetransfer -j \${PBS_O_WORKDIR} upload \${REPOSITORY_URL} \${FILE_LIST} > /dev/null
 else
    echo "No files locally created."
 endif

else
 echo "ERROR: No repository was specified for job... Stopping..."
endif

setenv DATE \`date\`
echo "CPMD_PBS finished at \${DATE}." 
touch \${PBS_O_WORKDIR}/finished
cd \${PBS_O_WORKDIR}
rm -rf /scratch/\${USER}/\${PBS_JOBID}
END_OF_PBS_SCRIPT

qsub pbs_script | cut -d "." -f 1 > ./running
