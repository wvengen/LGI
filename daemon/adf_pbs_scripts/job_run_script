#!/bin/csh

setenv LGI_DIR /home/${USER}/LGI
setenv CPUS `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics cpus | grep -E '^([0-9]{1,2})$'`
if ( ${CPUS} == "" ) then
   setenv CPUS 8
endif
setenv WALLTIME `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics walltime | grep -E '^([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})$'`
if ( ${WALLTIME} == "" ) then
   setenv WALLTIME "96:00:00"
endif

cat > ./pbs_script << END_OF_PBS_SCRIPT
#PBS -S /bin/csh
#PBS -l nodes=01:ppn=${CPUS},walltime=${WALLTIME}
#PBS -N adf_pbs
#PBS -o LGI_output

setenv LGI_DIR /home/\${USER}/LGI

setenv REPOSITORY_URL \`\${LGI_DIR}/daemon/bin/xml repository_url < \${PBS_O_WORKDIR}/LGI_job_specifics\`

setenv ADFHOME /home/\${USER}/ADF/adf2007.01
setenv ADFBIN \${ADFHOME}/bin
setenv ADFRESOURCES \${ADFHOME}/atomicdata
setenv SCMLICENSE \${ADFHOME}/license.txt
setenv SCM_TMPDIR /scratch/\${USER}/\${PBS_JOBID}

setenv NODE \`hostname -f\`
cd /scratch/\${USER}/\${PBS_JOBID}

setenv CWD \`pwd\`

if ( \${REPOSITORY_URL} != "" ) then

 setenv REPOSITORY_CONTENT \`\${LGI_DIR}/daemon/bin/LGI_filetransfer -j \${PBS_O_WORKDIR} -x list \${REPOSITORY_URL}\`

 setenv NROFFILES \`echo \${REPOSITORY_CONTENT} | \${LGI_DIR}/daemon/bin/xml number_of_files\`
 setenv FILE_LIST ""

 foreach nr ( \`seq 1 \${NROFFILES}\` )
    setenv FILE_ATTR  number=\\"\${nr}\\"
    setenv FILE_DATA \`echo \${REPOSITORY_CONTENT} | \${LGI_DIR}/daemon/bin/xml file \${FILE_ATTR}\`
    setenv FILE_NAME \`echo \${FILE_DATA} | \${LGI_DIR}/daemon/bin/xml file_name\`
    setenv FILE_LIST "\${FILE_LIST} \${FILE_NAME}"
 end

 if ( "\${FILE_LIST}" != "" ) then
    setenv DATE \`date\`
    echo "ADF_PBS started retrieving repository \${REPOSITORY_URL} to \${NODE}:\${CWD} at \${DATE}." 
    \${LGI_DIR}/daemon/bin/LGI_filetransfer -j \${PBS_O_WORKDIR} download \${REPOSITORY_URL} \${FILE_LIST} > /dev/null
 else
    echo "No files found in repository."
 endif

 dos2unix -n \${PBS_O_WORKDIR}/LGI_input adf.input

 echo "Creating and running logfile upload script on background."
 cat > upload_log_script << END_OF_UPLOAD_SCRIPT
     while ( 1 )
           sleep 600
           cp logfile__0 logfile > /dev/null
           \${LGI_DIR}/daemon/bin/LGI_filetransfer -j \${PBS_O_WORKDIR} upload \${REPOSITORY_URL} logfile > /dev/null
           sleep 1200
     end
END_OF_UPLOAD_SCRIPT
 /bin/csh upload_log_script &

 setenv DATE \`date\`
 echo "ADF_PBS started adf on node \${NODE} at \${DATE}." 
 \${ADFBIN}/adf -n ${CPUS} > adf.output < adf.input

 echo "Killing background logfile upload script."
 kill %1
 rm -f upload_log_script > /dev/null

 setenv FILE_LIST \`ls\`
 if ( "\${FILE_LIST}" != "" ) then
    setenv DATE \`date\`
    echo "ADF_PBS started sending back the output from \${NODE}:\${CWD} to repository \${REPOSITORY_URL} at \${DATE}." 
    \${LGI_DIR}/daemon/bin/LGI_filetransfer -j \${PBS_O_WORKDIR} upload \${REPOSITORY_URL} \${FILE_LIST} > /dev/null
 else
    echo "No files locally created."
 endif

else
 echo "ERROR: No repository was specified for job... Stopping..."
endif

setenv DATE \`date\`
echo "ADF_PBS finished at \${DATE}." 
touch \${PBS_O_WORKDIR}/finished
END_OF_PBS_SCRIPT

qsub pbs_script > ./running
