#!/bin/bash

# some settings...
export VOMS="ncf"
export X509_USER_PROXY=./x509_proxy_cert
export LGI_DIR="${HOME}/LGI"

# start retrieving the repository...
export REPOSITORY_URL=`${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics -o repository_file repository_url; cat repository_file`
export CWD=`pwd`

if [ ${REPOSITORY_URL} != "" ]
then
 ${LGI_DIR}/daemon/bin/LGI_filetransfer -x list ${REPOSITORY_URL} > repository_content

 export NROFFILES=`${LGI_DIR}/daemon/bin/xml -i repository_content -o repository_nr_of_files number_of_files; cat repository_nr_of_files`
 export FILE_LIST=""

 for NR in `seq 1 ${NROFFILES}`
 do
    export FILE_ATTR="number=\"${NR}\""
    export FILE_DATA=`${LGI_DIR}/daemon/bin/xml -i repository_content -o repository_file file ${FILE_ATTR}; cat repository_file`
    export FILE_NAME=`${LGI_DIR}/daemon/bin/xml -i repository_file -o repository_file_name file_name; cat repository_file_name`
    export FILE_LIST="${FILE_LIST} ${FILE_NAME}"
 done
fi

if [ "${FILE_LIST}" != "" ]
then
   export DATE=`date`
   echo "NONMEM-glite started retrieving repository ${REPOSITORY_URL} to ${CWD} at ${DATE}." >> LGI_output
   ${LGI_DIR}/daemon/bin/LGI_filetransfer -j ${CWD} download ${REPOSITORY_URL} ${FILE_LIST} > /dev/null
else
   echo "No files in repository." >> LGI_output
fi

# create job script...
cat > nonmem.submitted.sh << EOF_SCRIPT
mkdir -p ./temp/NONMEM_6.2.0/UNIX
mv NONMEMVI.tar ./temp/NONMEM_6.2.0/UNIX
mv SETUP ${FILE_LIST} ./temp
cd ./temp
chmod +x ./SETUP
./SETUP ./ ./ `which gfortran` -O `which ar` IEEE
chmod +x ./run/nmfe6
./run/nmfe6 ../input.nonmem ../output.nonmem
EOF_SCRIPT

# create file list for inputsandbox...
export FILE_LIST_2='"nonmem.submitted.sh", "input.nonmem", "NONMEMVI.tar", "SETUP"'
if [ "${FILE_LIST}" != "" ]
then

 for FILE in ${FILE_LIST}
 do
   export FILE_LIST_2="${FILE_LIST_2}, \"${FILE}\""
 done
fi

# create JDL for this job script...
cat > nonmem.submitted.jdl << EOF_JDL
type = "Job";
jobtype = "Normal";
executable = "/bin/bash";
arguments = "nonmem.submitted.sh";
stdoutput = "stdout";
stderror = "stderr";
outputsandbox = { "output.nonmem", "stdout", "stderr" };
inputsandbox = { ${FILE_LIST_2} };
shallowretrycount = 3;
requirements = ( other.gluecepolicymaxcputime > 720 );
myproxyserver = "px.grid.sara.nl";
EOF_JDL

# convert input...
cp LGI_input input.nonmem; dos2unix input.nonmem > /dev/null

# get other input files...
cp ${LGI_DIR}/daemon/NONMEM/NONMEMVI.tar .
cp ${LGI_DIR}/daemon/NONMEM/SETUP .

# create and submit new job from JDL...
export RUNNING=""
while [ "${RUNNING}" == "" ]
do
 myproxy-init -s px.grid.sara.nl -d -n > /dev/null
 voms-proxy-init -voms ${VOMS} -valid 196:00 -q &> /dev/null
 glite-wms-job-submit -a -o ${HOME}/my-glite-jobs nonmem.submitted.jdl | grep https | grep 9000 | tail -1 &> ./running
 export RUNNING=`cat ./running | grep -E '^https'`
 if [ "${RUNNING}" == "" ]
 then
    sleep 300
 fi
done

# wait until job is finished, sleep a bit...
export JOB_STATE=""
while [ "${JOB_STATE}" == "" ]
do
    sleep 300
    export JOB_ID=`cat ./running`
    export OUTPUT=`glite-wms-job-status ${JOB_ID} 2>&1`
    export JOB_STATE=`echo ${OUTPUT} | grep "Current Status" | grep -iE "Done|Cancelled|Cleared|Aborted"`
    export FAILED=`echo ${OUTPUT} | grep -i "expired"`
    if [ "${FAILED}" != "" ]
    then
      voms-proxy-init -voms ${VOMS} -valid 196:00 -q &> /dev/null 
    fi
done

# retrieve the output now...
glite-wms-job-output --dir ./output-files ${JOB_ID} &> /dev/null

# send back files to repository...
export FILE_LIST=`ls output-files/*/*`
if [ "${FILE_LIST}" != "" ]
then
      export DATE=`date`
      echo "NONMEM-glite started sending back the output from ${CWD} to repository ${REPOSITORY_URL} at ${DATE}." >> LGI_output
      ${LGI_DIR}/daemon/bin/LGI_filetransfer upload ${REPOSITORY_URL} ${FILE_LIST} > /dev/null
else
      echo "NONMEM-glite no locally created files found." >> LGI_output
fi

# and we are finished...
touch ./finished
