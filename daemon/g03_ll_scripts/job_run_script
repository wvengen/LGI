#!/bin/csh

echo $$ > running

setenv LGI_DIR /home/${USER}/LGI

setenv REPOSITORY_URL `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics -o repository_file repository_url; cat repository_file`
setenv CPUS `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics -o cpus_file cpus; grep -E '^([0-9]{1,2})$' cpus_file`
if ( ${CPUS} == "" ) then
   setenv CPUS 8
endif
setenv WALLTIME `${LGI_DIR}/daemon/bin/xml -i LGI_job_specifics -o walltime_file walltime; grep -E '^([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})$' walltime_file`
if ( ${WALLTIME} == "" ) then
   setenv WALLTIME "12:00:00"
endif
setenv CWD `pwd`

if ( ${REPOSITORY_URL} != "" ) then
 ${LGI_DIR}/daemon/bin/LGI_filetransfer -x list ${REPOSITORY_URL} > repository_content

 setenv NROFFILES `${LGI_DIR}/daemon/bin/xml -i repository_content -o repository_nr_of_files number_of_files; cat repository_nr_of_files`
 setenv FILE_LIST ""

 foreach nr ( `seq 1 ${NROFFILES}` )
    setenv FILE_ATTR  number=\"${nr}\"
    setenv FILE_DATA `${LGI_DIR}/daemon/bin/xml -i repository_content -o repository_file file ${FILE_ATTR}; cat repository_file`
    setenv FILE_NAME `${LGI_DIR}/daemon/bin/xml -i repository_file -o repository_file_name file_name; cat repository_file_name`
    setenv FILE_LIST "${FILE_LIST} ${FILE_NAME}"
 end

 mkdir repository
 cd repository

 if ( "${FILE_LIST}" != "" ) then
   setenv DATE `date`
   echo "G03_LL started retrieving repository ${REPOSITORY_URL} to ${CWD}/repository at ${DATE}." >> ../LGI_output
   ${LGI_DIR}/daemon/bin/LGI_filetransfer -j ${CWD} download ${REPOSITORY_URL} ${FILE_LIST} > /dev/null
 else
   echo "No files in repository." >> ../LGI_output
 endif

 cd ..

 cat > ./ll_submit_script << END_OF_LL_SUBMIT_SCRIPT
#@ shell = /usr/bin/csh
#@ job_name = g03_ll
#@ job_type = parallel
#@ node_usage = shared
#@ node = 1
#@ tasks_per_node = ${CPUS}
#@ notification = never
#@ output = ll_output
#@ wall_clock_limit = ${WALLTIME}
#@ queue

cd \${LOADL_STEP_INITDIR}/repository

source \${MODULESHOME}/init/csh
module load gaussian

dos2unix -n \${LOADL_STEP_INITDIR}/LGI_input g03.input
g03 > g03.output < g03.input
END_OF_LL_SUBMIT_SCRIPT

 llsubmit ll_submit_script | awk '/submitted/ { print $4 }' | cut -d'.' -f5 | cut -d '"' -f1 > ll_running
 setenv DATE `date`
 echo "G03_LL created loadleveler script and submitted at ${DATE}." >> LGI_output
 
 setenv ID `cat ll_running`
 if ( "${ID}" != "" ) then
  sleep 5
  setenv FINISHED `llq ${ID} | grep ${ID}`

  while ( "${FINISHED}" != "" )
   sleep 300 
   setenv FINISHED `llq ${ID} | grep ${ID}`
  end

  setenv FILE_LIST `ls ./repository/*`
  if ( "${FILE_LIST}" != "" ) then
      setenv DATE `date`
      echo "G03_LL started sending back the output from ${CWD}/repository to repository ${REPOSITORY_URL} at ${DATE}." >> LGI_output
      ${LGI_DIR}/daemon/bin/LGI_filetransfer upload ${REPOSITORY_URL} ./repository/* > /dev/null
  else
      echo "G03_LL no locally created files found." >> LGI_output
  endif

 else
   echo "ERROR: Job could not be submitted to loadleveler." >> LGI_output
 endif
 
else
 echo "ERROR: No repository was specified for job... Stopping..." >> LGI_output
endif

setenv DATE `date`
echo "G03_LL finished at ${DATE}." >> LGI_output
rm running
touch finished

